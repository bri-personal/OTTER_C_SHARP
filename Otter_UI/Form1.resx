<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="clock.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="otterRunner.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>108, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAIB8AAAEAIAAkEAAAFgAAACgAAAAgAAAAPgAAAAEAIAAAAAAAgA8AAHQSAAB0EgAAAAAAAAAA
        AADW6+3/1uvt/9fs7//B1tP/ZHpl/ztQNP8+VDb/WXNT/8LNv//b1dH/1dDN//f4+P//////4PPu/53d
        0P+hzL3/nLOk//L18////////f7+/+vp5//QyMP/t7eq/3aRcf9EXj3/OVAz/zxRN/9Va1T/pbyy/9fs
        7v/W6+3/1uvt/9br7f/W6+3/1uvt/9br7f/G3Nr/dYp5/z5VN/+GnIP/2djT/9/c2v/4+Pj/////////
        ///7/Pz/1eri/4DLt/+dyrz//v7+///////+/v7/+/z7/+rp5v/Hwrv/naeT/198Wv85TzL/WW5Y/7fN
        yP/V6uz/1uvt/9br7f/W6+3/1uvt/9br7f/W6+3/1uvt/9fs7//O4+T/jKeV/7O/sv/t7ev//v7+////
        ///////////////////b7Oj/jLOn/9Te2//6/Pz////////////5+/r/9fTy//Hu6v/Rzsj/jJ6F/2B7
        Xv+zycP/2O3w/9br7f/W6+3/1uvt/9br7f/W6+3/1uvt/9br7f/W6+3/1uvt/9fs7v/P5OT/4+no////
        /////////Pz9/+fq6//Dycn/lpqY/2twbv9hamv/eYGC/4mQk/+lrrH/y9LT/+Pm5//w7u3/7erm/+rk
        4P/S0Mb/r8O2/9br7v/W6+3/1uvt/9br7f/W6+3/1uvt/9br7f/W6+3/1uvt/9br7f/W6+3/1uvt/9Tp
        6//n7u//8vP0/8XLzv+Nlpr/YGpt/z1DRP8lJyP/JCUj/zY4M/9ESEf/PUZN/zNARv9LVlj/ZG5x/5GV
        lv+7u7n/19HO/93Tzv/J0tD/1uzu/9br7f/W6+3/1uvt/9br7f/W6+3/1uvt/9br7f/W6+3/1uvt/9br
        7f/W6+3/1+zu/7fExf9kb3X/T1hd/1FYWv9JUFP/Nzs8/ycoJv8oKSf/Ojs7/0xTWf8qNjr/KjY5/zE9
        Qv82Q0X/NkJC/zlFSf9ja23/mJaT/8DIx//X7O7/1uvt/9br7f/W6+3/1uvt/9br7f/W6+3/1uvt/9br
        7f/W6+3/1uvt/9br7f/Z7vD/nrG1/y48Qf9PVVj/YWVq/2Bjaf88QUT/R0tO/19la/9TWmD/LTY7/x8r
        Lf8jMDP/LDo//ztFS/8vPUH/Kzk+/zM+QP81QED/lKao/9Xr7P/W6+3/1uvt/9br7f/W6+3/1uvt/9br
        7f/W6+3/1uvt/9br7f/W6+3/1uvt/9nu8P+htLb/MD5F/1BcZv9ibXf/cHmC/2txdv9TX2b/NkJI/ycw
        M/8fJyn/Hygr/yMvMf8mNTn/OUVP/0RMUv8lMDP/Mjo7/zI5OP9gbnD/yd3f/9fs7v/W6+3/1uvt/9br
        7f/W6+3/1uvt/9br7f/W6+3/1uvt/9br7f/W6+3/2e7w/6K1uP8yQUb/NERO/y4/R/8zQUf/O0dM/ycy
        Nv8pNDn/JS40/x8lKP8gKCn/JTEz/yY0N/8nNT3/QEhR/y01Of89QUL/Mjg4/3eFiP/S5uj/1uvt/9br
        7f/W6+3/1uvt/9br7f/W6+3/1uvt/9br7f/W6+3/1uvt/9br7f/Y7u//ma+y/zRDSP8sNjf/JSsr/yUu
        L/8hKSr/JSos/ygvM/8dIiT/HCAh/x4jI/8gJyf/ICoq/yErLv80Pkj/S1BX/zE0Nf8wNzb/dYOE/9Lm
        6P/W6+3/1uvt/9br7f/W6+3/1uvt/9br7f/W6+3/1uvt/9br7f/W6+3/1uvt/9To6/+DlJv/OEdN/zQ+
        Pv88RUf/OUFG/yosLv8kJSb/HiAg/yAjI/8iJCT/HR0d/xwdHP8aHx7/HiYn/zE7Rf9RVVr/KS4s/zE6
        OP+Kl5j/2O3v/9br7f/W6+3/1uvt/9br7f/W6+3/1uvt/9br7f/W6+3/1uvt/9br7f/X7O7/yt7i/2N1
        fv9LWWH/OEBC/0BGSP9CR0n/Nzo6/zc6Ov9ARkf/Tlhe/0ZQVf87QkT/NDk6/yEjI/8qLzL/OkFJ/zU4
        OP8vODb/Ljo3/4iYm//W6+3/1uvt/9br7f/W6+3/1uvt/9br7f/W6+3/1uvt/9br7f/W6+3/1uvt/9Lm
        6f/K3uL/ZXV9/1lsdf9ASU7/QklO/1BZXP9ES0//Q0lM/1JYWf9RWV//Vl9m/2Brcv9eZ27/TFFU/0hO
        T/88P0H/Mzg5/zVBQf80QkT/kKOo/9Xp7P/W6+3/1uvt/9br7f/W6+3/1uvt/9br7f/W6+3/1uvt/9br
        7f/W6+3/zeLl/7PGzf9SX2X/T1xk/1Fkb/9JW2j/YnmI/2V8iP9Zbnn/WWZt/zo8P/87P0T/TVFX/0ZM
        Uv9OVlv/Xmlu/0tQU/8/REb/PElL/1Vobv+YqrH/0OPn/9br7f/W6+3/1uvt/9br7f/W6+3/1uvt/9br
        7f/W6+3/1uvt/9br7f/U6Ov/pri+/0tWXv9SYWv/ZYOQ/157if9qjJr/hai1/3WbrP9qipn/RlBV/0BK
        UP9Za3b/U2p2/2eBjP9pgIz/U2Nu/zpBRf9dZ2r/YG1w/5iorf/O4ub/1ers/9br7f/W6+3/1uvt/9br
        7f/W6+3/1uvt/9br7f/W6+3/1uzu/83h4/9neIH/OUlS/1Fodv9piJb/dJak/3CXpv9qk6X/cqi8/32w
        w/9kiZj/Zo6e/3aktf9wlqb/dZmp/26TpP9jgY7/Y3eB/1hkbP9QYGb/orS7/83h5f/W6+3/1uvt/9br
        7f/W6+3/1uvt/9br7f/W6+3/1uvt/9br7f/T6Or/iJif/0pXYP9CUlv/Tmh3/1Bvf/9hhJT/ZpSo/2md
        s/93qrz/b5mq/ztNVP9LaHP/cqq9/2igtP90n7D/g6e2/3qcrP9cc4P/Sldi/0hVWf+drbH/1Ons/9br
        7f/W6+3/1uvt/9br7f/W6+3/1uvt/9br7f/W6+3/1uvt/9Tp6/+Akpn/TVhb/1dgYv9UbHf/XYCP/2KG
        mv9olqz/ZpWr/2h8iv9LVl3/REhN/0ZOU/9LYWv/T3yQ/2qYq/9/o7P/c5an/1p4h/9QYWr/UFld/77Q
        0//X7O7/1uvt/9br7f/W6+3/1uvt/9br7f/W6+3/1uvt/9br7f/W6+3/0eXo/2l6gv8uOD3/TFVc/1Rq
        dv9jhZT/bIuc/32gsv9nma//ZYiZ/2lxev+AhIz/d3qB/01eav9Re4//a5uu/36tv/98prb/ZYWT/1lw
        ev9icnj/zN/i/9fs7v/W6+3/1uvt/9br7f/W6+3/1uvt/9br7f/W6+3/1uvt/9br7f/T5+r/fY+X/ys3
        P/8qMDf/Rl1p/1V1hf9TYXD/eIKU/3Waq/9ch5v/Umdz/1VZYv9VZHH/YYib/3ult/9ylqj/ZoaY/2mK
        mP9mfIb/XHF7/0lbZP+QoKT/1uvt/9br7f/W6+3/1uvt/9br7f/W6+3/1uvt/9br7f/W6+3/1uvt/9fs
        7f/J3uH/hqCn/0tobv9AUlr/PVBb/01YZP9zhZP/cI2e/3CSof9jhpX/V3OC/1Z8jv9okKH/dZam/2R5
        jP9OXmz/VG57/1ppcf95goX/hpac/6W2uv/V6uz/1uvt/9br7f/W6+3/1uvt/9br7f/W6+3/1uvt/9br
        7f/W6+3/1uvt/9Tn6v+ex8j/etHJ/2K1rf9PfoH/UGRs/1Bjbf9LY3D/VHGB/2B6iP9ObXz/TGl3/1Ju
        ff9UdIT/W3eI/1x1gf9fcnv/kZ6h/8nb3P/Y7e//2O3v/9br7f/W6+3/1uvt/9br7f/W6+3/1uvt/9br
        7f/W6+3/1uvt/9br7f/X7O7/v9HT/5Goq/9ur6z/V87A/0fEtv9HmJT/cIyQ/2x5gP9KX2n/WW14/2Z3
        f/9db3b/UGZx/1hxf/9cdYH/boGJ/6S1uf/S5uj/1+zu/9br7f/W6+3/1uvt/9br7f/W6+3/1uvt/9br
        7f/W6+3/1uvt/9br7f/W6+3/1uvt/9Tp6/+pur3/iJ2h/3aSmf9dn5//RL2w/zvFs/9CrKD/VYaH/1dr
        dP9XanL/WmVq/2Zucf9qcnP/XWxz/4ygp//F2Nv/1uvt/9br7f/W6+3/1uvt/9br7f/W6+3/1uvt/9br
        7f/W6+3/1uvt/9br7f/W6+3/1uvt/9br7f/W6+3/0+jq/5+zt/96lJv/cY+X/3COmf9ShIz/O56Y/za3
        pP8yrJb/MoN5/0hpbP9HWF7/LDI1/ycqLv8xO0P/jaCo/9js7//W6+3/1uvt/9br7f/W6+3/1uvt/9br
        7f/W6+3/1uvt/9br7f/W6+3/1uvt/9br7f/W6+3/1uvt/9br7f/W6+3/pbvA/3iUnP9ykZv/bI2Z/1t5
        hv9EZG//OHZ2/zKWhv8wpIn/L5B3/0d2cP9LXWT/LTg//zZET/96j5f/1enr/9br7f/W6+3/1uvt/9br
        7f/W6+3/1uvt/9br7f/W6+3/1uvt/9br7f/W6+3/1uvt/9br7f/W6+3/1uvt/9fs7v/J3eD/iqWs/22N
        mP9mhpP/VXSB/0Zibf9CWmb/OVVf/zBlYv8yh3H/f7aq/7THy/+Xq7H/oLW7/8Ta3f/W6+3/1uvt/9br
        7f/W6+3/1uvt/9br7f/W6+3/1uvt/9br7f/W6+3/1uvt/9br7f/W6+3/1uvt/9br7f/W6+3/1uvt/9fs
        7v/F2t7/gp2m/1p4hf9NaXX/Q11p/z9WY/83Slb/Lz5J/26Div/O5Ob/2O3v/9fs7v/Y7e//1+zu/9br
        7f/W6+3/1uvt/9br7f/W6+3/1uvt/9br7f/W6+3/1uvt/9br7f/W6+3/1uvt/9br7f/W6+3/1uvt/9br
        7f/W6+3/1uvt/9fs7v/N4uX/l6+1/113gP8/VWH/NEdS/zdHUP9vgIf/yNzf/9fs7v/W6+3/1uvt/9br
        7f/W6+3/1uvt/9br7f/W6+3/1uvt/9br7f/W6+3/1uvt/9br7f/W6+3/1uvt/9br7f/W6+3/1uvt/9br
        7f/W6+3/1uvt/9br7f/W6+3/1uvt/9fs7v/X7O7/yN3g/6e7wP+Upqz/q77C/9Hm6P/X7O7/1uvt/9br
        7f/W6+3/1uvt/9br7f/W6+3/1uvt/9br7f/W6+3/1uvt/9br7f/W6+3/1uvt/9br7f/W6+3/1uvt/9br
        7f/W6+3/1uvt/9br7f/W6+3/1uvt/9br7f/W6+3/1uvt/9br7f/X7O7/2e7w/9nu8P/Z7vD/1uvt/9br
        7f/W6+3/1uvt/9br7f/W6+3/1uvt/9br7f/W6+3/1uvt/9br7f/W6+3/1uvt/9br7f/W6+3/1uvt/9br
        7f/W6+3/1uvt/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>